---
- name: Query Service Request Template for RHPDS Tasks
  uri:
    url: "{{ rhpdsurl }}/api/v3.0.0/service_requests/{{ hostvars['127.0.0.1']['serviceid'] }}?expand=request_tasks"
    user: "{{ rhpdsuser }}"
    password: "{{ rhpdspass }}"
    method: GET
  register: serviceexpanded
  until: serviceexpanded.json.request_state == "finished"
  retries: 20
  delay: 30
#- name: Show all output
#  debug:
#    msg: "{{serviceexpanded}}"

- name: Debug Task ID
  debug:
    msg: "{{serviceexpanded.json.request_tasks[0].id}}"
    verbosity: 2
- name: Debug Task URI request
  debug:
    msg: "{{serviceexpanded.json.request_tasks[0].href}}"
- name: Query Service Template for (ServiceID)
  uri:
    url: "{{ serviceexpanded.json.request_tasks[0].href }}"
    user: "{{ rhpdsuser }}"
    password: "{{ rhpdspass }}"
    method: GET
  register: taskinformation
#- name: Task options
#  debug:
#    msg: "{{taskinformation.json.options.dialog}}"
- name: Debug Service ID
  debug:
    msg: "{{taskinformation.json.options.dialog['Service::Service']}}"
    verbosity: 2
- name: Query Service {{taskinformation.json.options.dialog['Service::Service']}} for Custom Attributes)
  uri:
    url: "{{ rhpdsurl }}/api/v3.0.0/services/{{taskinformation.json.options.dialog['Service::Service']}}?attributes=custom_attributes"
    user: "{{ rhpdsuser }}"
    password: "{{ rhpdspass }}"
    method: GET
  register: moreattributes
- name: Searching project for AWS ACCESS KEY
  vars:
    _query: "[?name ==`AWS_ACCESS_KEY_ID`].value"
  set_fact:
    aws_access_key_temp: "{{ moreattributes.json.custom_attributes|json_query(_query) }}"

- name: Searching project for AWS SECRET KEY
  vars:
    _query: "[?name ==`AWS_SECRET_ACCESS_KEY`].value"
  set_fact:
    aws_access_secret_temp: "{{ moreattributes.json.custom_attributes|json_query(_query) }}"

- name: Searching project for route53 domain
  vars:
    _query: "[?name ==`sandboxzone`].value"
  set_fact:
    domain_temp: "{{ moreattributes.json.custom_attributes|json_query(_query) }}"

- name: Clean up Variables
  set_fact:
    aws_access_key: "{{ aws_access_key_temp[0] | trim }}"
    aws_access_secret: "{{ aws_access_secret_temp[0] | trim }}"
    domain: "{{ domain_temp[0] | trim }}"

- name: Display AWS Key and Secret
  debug:
   msg:
    - "AWS ACCESS KEY: '{{aws_access_key}}'"
    - "AWS SECRET KEY: '{{aws_access_secret}}'"
    - "DOMAIN: '{{domain}}'"
    - "SERVICE ID: '{{ hostvars['127.0.0.1']['serviceid'] }}'"
